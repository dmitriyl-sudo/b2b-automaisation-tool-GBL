#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö CH_CHF –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Vegazone
–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Vegazone –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è –®–≤–µ–π—Ü–∞—Ä–∏–∏
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from main import geo_groups, VEGASZONE_EXTRA_GEOS
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

def test_vegazone_ch_chf_accounts():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ CH_CHF –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è Vegazone"""
    print('üß™ –¢–ï–°–¢ CH_CHF –ê–ö–ö–ê–£–ù–¢–û–í –î–õ–Ø VEGAZONE')
    print('='*60)
    
    # –û–∂–∏–¥–∞–µ–º—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è Vegazone CH_CHF
    expected_vegazone_accounts = [
        "0depnoaffchchfdesk1",
        "0depaffilchchfmobi1", 
        "0depnoaffchchfmobi1",
        "0depaffilchchfdesk1",
        "4depaffilchchfmobi2"
    ]
    
    # –ë–∞–∑–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã CH_CHF (–¥–ª—è –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤)
    base_accounts = geo_groups.get("CH_CHF", [])
    
    # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã Vegazone CH_CHF
    vegazone_accounts = VEGASZONE_EXTRA_GEOS.get("CH_CHF", [])
    
    print("üìã –ë–ê–ó–û–í–´–ï CH_CHF –ê–ö–ö–ê–£–ù–¢–´ (–¥–ª—è –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤):")
    for i, account in enumerate(base_accounts, 1):
        print(f"   {i}. {account}")
    
    print(f"\nüìã VEGAZONE CH_CHF –ê–ö–ö–ê–£–ù–¢–´ (—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ):")
    for i, account in enumerate(vegazone_accounts, 1):
        print(f"   {i}. {account}")
    
    print(f"\nüîç –ü–†–û–í–ï–†–ö–ê –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø:")
    all_correct = True
    
    for expected in expected_vegazone_accounts:
        if expected in vegazone_accounts:
            print(f"   ‚úÖ {expected} - –ù–ê–ô–î–ï–ù")
        else:
            print(f"   ‚ùå {expected} - –û–¢–°–£–¢–°–¢–í–£–ï–¢!")
            all_correct = False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–µ—Ç –ª–∏—à–Ω–∏—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    for actual in vegazone_accounts:
        if actual not in expected_vegazone_accounts:
            print(f"   ‚ö†Ô∏è  {actual} - –õ–ò–®–ù–ò–ô –ê–ö–ö–ê–£–ù–¢")
            all_correct = False
    
    print(f"\nüîç –†–ê–ó–õ–ò–ß–ò–Ø –° –ë–ê–ó–û–í–´–ú–ò –ê–ö–ö–ê–£–ù–¢–ê–ú–ò:")
    base_set = set(base_accounts)
    vegazone_set = set(vegazone_accounts)
    
    only_in_base = base_set - vegazone_set
    only_in_vegazone = vegazone_set - base_set
    
    if only_in_base:
        print(f"   üìä –¢–æ–ª—å–∫–æ –≤ –±–∞–∑–æ–≤—ã—Ö:")
        for account in only_in_base:
            print(f"      ‚Ä¢ {account}")
    
    if only_in_vegazone:
        print(f"   üìä –¢–æ–ª—å–∫–æ –≤ Vegazone:")
        for account in only_in_vegazone:
            print(f"      ‚Ä¢ {account}")
    
    if not only_in_base and not only_in_vegazone:
        print(f"   ‚ö†Ô∏è  –ê–∫–∫–∞—É–Ω—Ç—ã –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ! –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏–∫—É.")
    
    print(f"\nüéØ –õ–û–ì–ò–ö–ê –í–´–ë–û–†–ê –ê–ö–ö–ê–£–ù–¢–û–í:")
    print(f"   ‚Ä¢ –î–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ –∫—Ä–æ–º–µ Vegazone: –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –±–∞–∑–æ–≤—ã–µ CH_CHF")
    print(f"   ‚Ä¢ –î–ª—è Vegazone: –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ CH_CHF –∏–∑ VEGASZONE_EXTRA_GEOS")
    print(f"   ‚Ä¢ –õ–æ–≥–∏–∫–∞ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è: {{**geo_groups, **VEGASZONE_EXTRA_GEOS}}")
    print(f"   ‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—é—Ç –±–∞–∑–æ–≤—ã–µ")
    
    print(f"\n" + "="*60)
    if all_correct:
        print("‚úÖ –í–°–ï CH_CHF –ê–ö–ö–ê–£–ù–¢–´ –î–õ–Ø VEGAZONE –ù–ê–°–¢–†–û–ï–ù–´ –ü–†–ê–í–ò–õ–¨–ù–û!")
    else:
        print("‚ùå –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í –ù–ê–°–¢–†–û–ô–ö–ï CH_CHF –ê–ö–ö–ê–£–ù–¢–û–í!")
    
    return all_correct

def test_api_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É API –¥–ª—è –≤—ã–±–æ—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    print(f"\nüîß –¢–ï–°–¢ –õ–û–ì–ò–ö–ò API:")
    print("-" * 40)
    
    # –≠–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ api_fastapi_backend.py
    # –î–ª—è Vegazone
    effective_geo_groups_vegazone = {**geo_groups, **VEGASZONE_EXTRA_GEOS}
    vegazone_ch_accounts = effective_geo_groups_vegazone.get("CH_CHF", [])
    
    # –î–ª—è –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤
    other_ch_accounts = geo_groups.get("CH_CHF", [])
    
    print(f"üìä Vegazone CH_CHF –∞–∫–∫–∞—É–Ω—Ç—ã: {len(vegazone_ch_accounts)} —à—Ç.")
    for account in vegazone_ch_accounts:
        print(f"   ‚Ä¢ {account}")
    
    print(f"\nüìä –î—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ã CH_CHF –∞–∫–∫–∞—É–Ω—Ç—ã: {len(other_ch_accounts)} —à—Ç.")
    for account in other_ch_accounts:
        print(f"   ‚Ä¢ {account}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–∫–∫–∞—É–Ω—Ç—ã —Ä–∞–∑–Ω—ã–µ
    if set(vegazone_ch_accounts) != set(other_ch_accounts):
        print(f"\n‚úÖ –õ–û–ì–ò–ö–ê –†–ê–ë–û–¢–ê–ï–¢: Vegazone –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã!")
    else:
        print(f"\n‚ùå –ü–†–û–ë–õ–ï–ú–ê: Vegazone –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–µ –∂–µ –∞–∫–∫–∞—É–Ω—Ç—ã —á—Ç–æ –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ã!")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = test_vegazone_ch_chf_accounts()
    test_api_logic()
    
    print(f"\nüéØ –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢:")
    if success:
        print("‚úÖ CH_CHF –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è Vegazone –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("üöÄ –ú–æ–∂–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ!")
    else:
        print("‚ùå –¢—Ä–µ–±—É—é—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∞–∫–∫–∞—É–Ω—Ç–æ–≤!")
    
    return success

if __name__ == "__main__":
    main()
