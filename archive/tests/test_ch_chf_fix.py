#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è CH_CHF –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è Vegazone
–ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ get_all_methods_for_geo –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from api_fastapi_backend import get_all_methods_for_geo
from main import geo_groups, VEGASZONE_EXTRA_GEOS
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

def test_ch_chf_account_selection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—ã–±–æ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö CH_CHF –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è Vegazone"""
    print('üß™ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø CH_CHF –ê–ö–ö–ê–£–ù–¢–û–í')
    print('='*60)
    
    # –û–∂–∏–¥–∞–µ–º—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è Vegazone CH_CHF
    expected_vegazone_accounts = [
        "0depnoaffchchfdesk1",
        "0depaffilchchfmobi1", 
        "0depnoaffchchfmobi1",
        "0depaffilchchfdesk1",
        "4depaffilchchfmobi2"
    ]
    
    # –ë–∞–∑–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã CH_CHF
    base_accounts = geo_groups.get("CH_CHF", [])
    
    print("üìã –ë–ê–ó–û–í–´–ï CH_CHF –ê–ö–ö–ê–£–ù–¢–´:")
    for account in base_accounts:
        print(f"   ‚Ä¢ {account}")
    
    print(f"\nüìã –û–ñ–ò–î–ê–ï–ú–´–ï VEGAZONE CH_CHF –ê–ö–ö–ê–£–ù–¢–´:")
    for account in expected_vegazone_accounts:
        print(f"   ‚Ä¢ {account}")
    
    print(f"\nüîç –¢–ï–°–¢–ò–†–£–ï–ú –õ–û–ì–ò–ö–£ get_all_methods_for_geo...")
    
    # –≠–º—É–ª–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
    project = "Vegazone"
    geo = "CH_CHF"
    
    # –õ–æ–≥–∏–∫–∞ –≤—ã–±–æ—Ä–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ (–∫–∞–∫ –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏)
    if project == "Glitchspin":
        merged_geo_groups = {**geo_groups, **{}}  # GLITCHSPIN_EXTRA_GEOS –ø—É—Å—Ç–æ–π –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
    elif project == "Vegazone":
        merged_geo_groups = {**geo_groups, **VEGASZONE_EXTRA_GEOS}
    else:
        merged_geo_groups = geo_groups
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    if geo in merged_geo_groups:
        login_list = merged_geo_groups[geo]
    else:
        base_geo = geo.split('_')[0]
        if base_geo in merged_geo_groups:
            login_list = merged_geo_groups[base_geo]
        else:
            login_list = []
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢ –õ–û–ì–ò–ö–ò:")
    print(f"   –ü—Ä–æ–µ–∫—Ç: {project}")
    print(f"   GEO: {geo}")
    print(f"   –ù–∞–π–¥–µ–Ω–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤: {len(login_list)}")
    
    for i, account in enumerate(login_list, 1):
        print(f"   {i}. {account}")
    
    print(f"\nüîç –ü–†–û–í–ï–†–ö–ê –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø:")
    all_correct = True
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã
    if set(login_list) == set(expected_vegazone_accounts):
        print(f"   ‚úÖ –í–°–ï –ê–ö–ö–ê–£–ù–¢–´ –ü–†–ê–í–ò–õ–¨–ù–´–ï!")
    else:
        print(f"   ‚ùå –ê–ö–ö–ê–£–ù–¢–´ –ù–ï –°–û–û–¢–í–ï–¢–°–¢–í–£–Æ–¢ –û–ñ–ò–î–ê–ï–ú–´–ú!")
        all_correct = False
        
        missing = set(expected_vegazone_accounts) - set(login_list)
        extra = set(login_list) - set(expected_vegazone_accounts)
        
        if missing:
            print(f"   ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç:")
            for account in missing:
                print(f"      ‚Ä¢ {account}")
        
        if extra:
            print(f"   ‚ö†Ô∏è  –õ–∏—à–Ω–∏–µ:")
            for account in extra:
                print(f"      ‚Ä¢ {account}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–∫–∫–∞—É–Ω—Ç—ã –æ—Ç–ª–∏—á–∞—é—Ç—Å—è –æ—Ç –±–∞–∑–æ–≤—ã—Ö
    if set(login_list) != set(base_accounts):
        print(f"   ‚úÖ –ê–ö–ö–ê–£–ù–¢–´ –û–¢–õ–ò–ß–ê–Æ–¢–°–Ø –û–¢ –ë–ê–ó–û–í–´–• (—ç—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ)")
    else:
        print(f"   ‚ùå –ê–ö–ö–ê–£–ù–¢–´ –¢–ê–ö–ò–ï –ñ–ï –ö–ê–ö –ë–ê–ó–û–í–´–ï (–ø—Ä–æ–±–ª–µ–º–∞!)")
        all_correct = False
    
    print(f"\nüîç –¢–ï–°–¢ –î–†–£–ì–ò–• –ü–†–û–ï–ö–¢–û–í:")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —á—Ç–æ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –±–∞–∑–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã
    other_project = "Rolling"
    if other_project == "Glitchspin":
        other_merged = {**geo_groups, **{}}
    elif other_project == "Vegazone":
        other_merged = {**geo_groups, **VEGASZONE_EXTRA_GEOS}
    else:
        other_merged = geo_groups
    
    other_accounts = other_merged.get("CH_CHF", [])
    
    print(f"   –ü—Ä–æ–µ–∫—Ç: {other_project}")
    print(f"   CH_CHF –∞–∫–∫–∞—É–Ω—Ç—ã: {len(other_accounts)} —à—Ç.")
    
    if set(other_accounts) == set(base_accounts):
        print(f"   ‚úÖ –î—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –±–∞–∑–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã")
    else:
        print(f"   ‚ùå –î—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã")
        all_correct = False
    
    print(f"\n" + "="*60)
    if all_correct:
        print("‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–ë–û–¢–ê–ï–¢ –ü–†–ê–í–ò–õ–¨–ù–û!")
        print("üöÄ Vegazone –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ CH_CHF –∞–∫–∫–∞—É–Ω—Ç—ã!")
    else:
        print("‚ùå –ù–ê–ô–î–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í –ò–°–ü–†–ê–í–õ–ï–ù–ò–ò!")
    
    return all_correct

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = test_ch_chf_account_selection()
    
    if success:
        print(f"\nüéØ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±—ç–∫–µ–Ω–¥ —á—Ç–æ–±—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø–∏–ª–∏ –≤ —Å–∏–ª—É")
        print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ: Vegazone -> CH_CHF -> Load Methods")
        print("3. –í –ª–æ–≥–∞—Ö –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã —Å —Å—É—Ñ—Ñ–∏–∫—Å–∞–º–∏ 1/2")
    
    return success

if __name__ == "__main__":
    main()
