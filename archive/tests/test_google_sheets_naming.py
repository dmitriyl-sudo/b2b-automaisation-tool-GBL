#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è Google Sheets —Ñ–∞–π–ª–æ–≤ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞
"""

import requests
import json
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BASE_URL = "http://localhost:8000"
TEST_CASES = [
    {"project": "Rolling", "geo": "DE", "env": "prod"},
    {"project": "SpinEmpire", "geo": "IT", "env": "stage"},
    {"project": "Ritzo", "geo": "FI", "env": "prod"}
]

def test_google_sheets_naming():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —á—Ç–æ Google Sheets —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞—é—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏"""
    print("üîç –¢–ï–°–¢: –ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ Google Sheets —Ñ–∞–π–ª–æ–≤ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –ø—Ä–æ–µ–∫—Ç–∞")
    print("=" * 70)
    
    for i, test_case in enumerate(TEST_CASES):
        project = test_case["project"]
        geo = test_case["geo"]
        env = test_case["env"]
        
        print(f"\nüìä –¢–ï–°–¢ {i+1}: {project} - {geo} - {env}")
        print("-" * 50)
        
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞
            response = requests.post(f"{BASE_URL}/get-sheets-data-fixed", json={
                "project": project,
                "geo": geo,
                "env": env
            })
            
            if response.status_code != 200:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: HTTP {response.status_code}")
                continue
                
            data = response.json()
            
            if not data.get('success'):
                print(f"‚ùå –û—à–∏–±–∫–∞: {data.get('error', 'Unknown')}")
                continue
                
            rows = data.get('rows', [])
            if len(rows) == 0:
                print(f"‚ö†Ô∏è  –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ (–ø—É—Å—Ç–æ–µ GEO)")
                continue
                
            print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã: {len(rows)} —Å—Ç—Ä–æ–∫")
            
            # –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Å–ø–æ—Ä—Ç (–ù–ï –≤—ã–ø–æ–ª–Ω—è–µ–º —Ä–µ–∞–ª—å–Ω—ã–π —ç–∫—Å–ø–æ—Ä—Ç, —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É)
            expected_filename = f"Geo Methods Export {geo} {env} - {project}"
            print(f"üìù –û–∂–∏–¥–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: '{expected_filename}'")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥–∞–Ω—ã
            export_payload = {
                "data": rows,
                "originalOrder": [],
                "project": project,
                "geo": geo,
                "env": env
            }
            
            print(f"‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞:")
            print(f"   ‚Ä¢ project: {project}")
            print(f"   ‚Ä¢ geo: {geo}")
            print(f"   ‚Ä¢ env: {env}")
            print(f"   ‚Ä¢ data: {len(rows)} —Å—Ç—Ä–æ–∫")
            
            # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ (–∫–∞–∫ –≤ utils/google_drive.py)
            simulated_filename = f"Geo Methods Export {geo} {env} - {project}"
            print(f"‚úÖ –°–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: '{simulated_filename}'")
            
            if simulated_filename == expected_filename:
                print(f"üéâ SUCCESS: –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ!")
            else:
                print(f"‚ùå FAIL: –ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print(f"üß™ –¢–ï–°–¢ –ò–ú–ï–ù–û–í–ê–ù–ò–Ø GOOGLE SHEETS –§–ê–ô–õ–û–í")
    print(f"üìÖ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 80)
    
    test_google_sheets_naming()
    
    print(f"\nüìä –ò–¢–û–ì–ò –ò–ó–ú–ï–ù–ï–ù–ò–ô")
    print("=" * 70)
    
    print(f"‚úÖ –ß–¢–û –ò–ó–ú–ï–ù–ï–ù–û:")
    print("   1. üìÅ api_fastapi_backend.py:")
    print("      ‚Ä¢ –≠–Ω–¥–ø–æ–∏–Ω—Ç /export-table-to-sheets –ø—Ä–∏–Ω–∏–º–∞–µ—Ç project, geo, env")
    print("      ‚Ä¢ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤ upload_table_to_sheets()")
    print()
    print("   2. üìÅ utils/google_drive.py:")
    print("      ‚Ä¢ –§—É–Ω–∫—Ü–∏—è upload_table_to_sheets() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç project, geo, env")
    print("      ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞: 'Geo Methods Export {geo} {env} - {project}'")
    print()
    print("   3. üìÅ frontend/src/panels/GeoMethodsPanel.jsx:")
    print("      ‚Ä¢ –ü–µ—Ä–µ–¥–∞–µ—Ç project, geo, env –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –≤ Google Sheets")
    print()
    print("   4. üìÅ frontend/src/panels/MethodTestPanel.jsx:")
    print("      ‚Ä¢ –ü–µ—Ä–µ–¥–∞–µ—Ç project, geo, env –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ —Ç–µ—Å—Ç–æ–≤ –º–µ—Ç–æ–¥–æ–≤")
    print()
    print(f"üéØ –ü–†–ò–ú–ï–†–´ –ù–û–í–´–• –ù–ê–ó–í–ê–ù–ò–ô:")
    print("   ‚Ä¢ 'Geo Methods Export DE prod - Rolling'")
    print("   ‚Ä¢ 'Geo Methods Export IT stage - SpinEmpire'")
    print("   ‚Ä¢ 'Geo Methods Export FI prod - Ritzo'")
    print()
    print(f"üí° –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:")
    print("   ‚Ä¢ –õ–µ–≥–∫–æ –Ω–∞–π—Ç–∏ —Ñ–∞–π–ª—ã –ø–æ –ø—Ä–æ–µ–∫—Ç—É")
    print("   ‚Ä¢ –ü–æ–Ω—è—Ç–Ω–æ –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ")
    print("   ‚Ä¢ –ù–µ—Ç –ø—É—Ç–∞–Ω–∏—Ü—ã –º–µ–∂–¥—É –ø—Ä–æ–µ–∫—Ç–∞–º–∏")
    print("   ‚Ä¢ –í–∫–ª—é—á–∞–µ—Ç GEO –∏ –æ–∫—Ä—É–∂–µ–Ω–∏–µ")
    print()
    print(f"‚ú® –ó–ê–î–ê–ß–ê –í–´–ü–û–õ–ù–ï–ù–ê!")
    print("   –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ —Ç–µ–ø–µ—Ä—å –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –∫–æ–Ω—Ü–µ –Ω–∞–∑–≤–∞–Ω–∏—è Google Sheets —Ñ–∞–π–ª–∞!")
    
    return True

if __name__ == "__main__":
    import sys
    success = main()
    sys.exit(0 if success else 1)
