#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Telegram –±–æ—Ç–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""

import asyncio
import logging
from datetime import datetime
from telegram_bot import init_telegram_bot, send_sheet_notification_sync
from telegram_config import TelegramConfig

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_telegram_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é Telegram –±–æ—Ç–∞"""
    print("üß™ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò TELEGRAM –ë–û–¢–ê")
    print(f"üìÖ –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 80)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    print("\n1Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò")
    print("-" * 50)
    
    if TelegramConfig.is_configured():
        bot_token = TelegramConfig.get_bot_token()
        chat_id = TelegramConfig.get_chat_id()
        print(f"‚úÖ Telegram –±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print(f"   Bot Token: {bot_token[:10]}...")
        print(f"   Chat ID: {chat_id}")
    else:
        print("‚ùå Telegram –±–æ—Ç –ù–ï –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        print("\nüìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ:")
        print(TelegramConfig.get_setup_instructions())
        return False
    
    # 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞
    print("\n2Ô∏è‚É£ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ë–û–¢–ê")
    print("-" * 50)
    
    try:
        notifier = init_telegram_bot(bot_token, chat_id)
        print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    print("\n3Ô∏è‚É£ –¢–ï–°–¢ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô")
    print("-" * 50)
    
    test_cases = [
        {
            "name": "–û–¥–∏–Ω–æ—á–Ω—ã–π GEO —ç–∫—Å–ø–æ—Ä—Ç",
            "params": {
                "sheet_url": "https://docs.google.com/spreadsheets/d/test_single_123",
                "project": "Rolling",
                "geo": "DE",
                "env": "prod",
                "export_type": "single"
            }
        },
        {
            "name": "Multi-GEO —ç–∫—Å–ø–æ—Ä—Ç",
            "params": {
                "sheet_url": "https://docs.google.com/spreadsheets/d/test_multi_456",
                "project": "SpinEmpire",
                "env": "stage",
                "export_type": "multi"
            }
        },
        {
            "name": "Full Project —ç–∫—Å–ø–æ—Ä—Ç",
            "params": {
                "sheet_url": "https://docs.google.com/spreadsheets/d/test_full_789",
                "project": "Ritzo",
                "env": "prod",
                "export_type": "full"
            }
        }
    ]
    
    success_count = 0
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"\n   –¢–µ—Å—Ç {i}: {test_case['name']}")
        
        try:
            success = send_sheet_notification_sync(**test_case['params'])
            if success:
                print(f"   ‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
                success_count += 1
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
        except Exception as e:
            print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    # 4. –ò—Ç–æ–≥–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    print(f"\n4Ô∏è‚É£ –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("-" * 50)
    
    total_tests = len(test_cases)
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {success_count}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ")
    
    if success_count == total_tests:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("‚úÖ Telegram –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")
        return True
    else:
        print(f"‚ö†Ô∏è  {total_tests - success_count} —Ç–µ—Å—Ç–æ–≤ –Ω–µ –ø—Ä–æ—à–ª–∏")
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    success = test_telegram_integration()
    
    print(f"\nüìã –ß–¢–û –ë–´–õ–û –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù–û:")
    print("   1. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Telegram –±–æ—Ç–∞")
    print("   2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞")
    print("   3. –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—Å–µ—Ö —Ç–∏–ø–æ–≤")
    print("   4. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫")
    
    print(f"\nüîß –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –í –°–ò–°–¢–ï–ú–£:")
    print("   ‚Ä¢ api_fastapi_backend.py - –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤—ã–∑–æ–≤—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    print("   ‚Ä¢ –í—Å–µ —Ç–∏–ø—ã —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç Telegram")
    print("   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ")
    print("   ‚Ä¢ Graceful handling –æ—à–∏–±–æ–∫")
    
    if success:
        print(f"\n‚ú® TELEGRAM –ë–û–¢ –ü–û–õ–ù–û–°–¢–¨–Æ –ò–ù–¢–ï–ì–†–ò–†–û–í–ê–ù!")
        print("   –¢–µ–ø–µ—Ä—å –≤—Å–µ Google Sheets —ç–∫—Å–ø–æ—Ä—Ç—ã –±—É–¥—É—Ç")
        print("   –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ Telegram!")
    else:
        print(f"\n‚ö†Ô∏è  –¢–†–ï–ë–£–ï–¢–°–Ø –ù–ê–°–¢–†–û–ô–ö–ê")
        print("   –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ telegram_setup.md")
    
    return success

if __name__ == "__main__":
    import sys
    success = main()
    sys.exit(0 if success else 1)
