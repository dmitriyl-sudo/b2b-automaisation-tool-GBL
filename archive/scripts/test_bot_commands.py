#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥ Telegram –±–æ—Ç–∞ –∏ —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import asyncio
import logging
from datetime import datetime
from export_logger import export_logger, log_export, get_today_exports_summary
from telegram_config import TelegramConfig
from telegram_bot import send_sheet_notification_sync

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_export_logger():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —ç–∫—Å–ø–æ—Ä—Ç–æ–≤"""
    print('üìä –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –õ–û–ì–ò–†–û–í–ê–ù–ò–Ø –≠–ö–°–ü–û–†–¢–û–í')
    print('='*50)
    print()
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã
    test_exports = [
        ("Rolling", "DE", "prod", "single", "https://docs.google.com/spreadsheets/d/test1"),
        ("SpinEmpire", None, "stage", "multi", "https://docs.google.com/spreadsheets/d/test2"),
        ("Ritzo", None, "prod", "full", "https://docs.google.com/spreadsheets/d/test3"),
        ("Rolling", "IT", "prod", "single", "https://docs.google.com/spreadsheets/d/test4"),
        ("Hugo", "FI", "stage", "single", "https://docs.google.com/spreadsheets/d/test5"),
    ]
    
    print('üìù –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —ç–∫—Å–ø–æ—Ä—Ç–æ–≤:')
    for i, (project, geo, env, export_type, sheet_url) in enumerate(test_exports, 1):
        log_export(project, geo, env, export_type, sheet_url)
        geo_str = f" - {geo}" if geo else ""
        print(f'   {i}. {project}{geo_str} ({export_type}, {env})')
    
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É
    summary = get_today_exports_summary()
    
    print('üìä –°–í–û–î–ö–ê –ó–ê –°–ï–ì–û–î–ù–Ø:')
    print(f'   –í—Å–µ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–æ–≤: {summary["total"]}')
    print(f'   –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤: {len(summary["projects"])}')
    print(f'   –ü—Ä–æ–µ–∫—Ç—ã: {", ".join(summary["projects"])}')
    print()
    
    print('üìã –ü–æ —Ç–∏–ø–∞–º:')
    for export_type, count in summary["by_type"].items():
        print(f'   ‚Ä¢ {export_type}: {count}')
    print()
    
    print('üåç –ü–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è–º:')
    for env, count in summary["by_env"].items():
        print(f'   ‚Ä¢ {env}: {count}')
    print()
    
    return summary["total"] > 0

def test_telegram_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å Telegram"""
    print('ü§ñ –¢–ï–°–¢ –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° TELEGRAM')
    print('='*50)
    print()
    
    if not TelegramConfig.is_configured():
        print('‚ùå Telegram –±–æ—Ç –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
        return False
    
    print('‚úÖ Telegram –±–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
    print(f'   Token: {TelegramConfig.get_bot_token()[:15]}...')
    print(f'   Chat ID: {TelegramConfig.get_chat_id()}')
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    print('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...')
    success = send_sheet_notification_sync(
        sheet_url="https://docs.google.com/spreadsheets/d/test_bot_commands",
        project="TestProject",
        geo="DE",
        env="prod",
        export_type="single"
    )
    
    if success:
        print('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ')
        print('üìä –≠–∫—Å–ø–æ—Ä—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω')
        return True
    else:
        print('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
        return False

def simulate_daily_activity():
    """–°–∏–º—É–ª–∏—Ä—É–µ—Ç –¥–Ω–µ–≤–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print('üé≠ –°–ò–ú–£–õ–Ø–¶–ò–Ø –î–ù–ï–í–ù–û–ô –ê–ö–¢–ò–í–ù–û–°–¢–ò')
    print('='*50)
    print()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã
    activities = [
        ("Rolling", "DE", "prod", "single"),
        ("Rolling", "IT", "prod", "single"),
        ("SpinEmpire", None, "stage", "multi"),
        ("Ritzo", None, "prod", "full"),
        ("Hugo", "FI", "stage", "single"),
        ("Winshark", "SE", "prod", "single"),
        ("Rolling", "AT", "prod", "single"),
        ("SpinEmpire", None, "prod", "multi"),
    ]
    
    print('üìä –°–æ–∑–¥–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:')
    for i, (project, geo, env, export_type) in enumerate(activities, 1):
        sheet_url = f"https://docs.google.com/spreadsheets/d/activity_{i}"
        log_export(project, geo, env, export_type, sheet_url)
        
        geo_str = f" - {geo}" if geo else ""
        print(f'   {i}. {project}{geo_str} ({export_type}, {env})')
    
    print()
    print(f'‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(activities)} –∑–∞–ø–∏—Å–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏')
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    summary = get_today_exports_summary()
    
    print()
    print('üìà –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:')
    print(f'   üìä –í—Å–µ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–æ–≤: {summary["total"]}')
    print(f'   üè¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤: {len(summary["projects"])}')
    print(f'   üìã –¢–∏–ø—ã: {", ".join(f"{t}({c})" for t, c in summary["by_type"].items())}')
    print(f'   üåç –û–∫—Ä—É–∂–µ–Ω–∏—è: {", ".join(f"{e}({c})" for e, c in summary["by_env"].items())}')
    
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print('üß™ –¢–ï–°–¢ –ö–û–ú–ê–ù–î TELEGRAM –ë–û–¢–ê')
    print('='*60)
    print(f'üìÖ –î–∞—Ç–∞: {datetime.now().strftime("%Y-%m-%d %H:%M:%S")}')
    print()
    
    tests_passed = 0
    total_tests = 4
    
    # –¢–µ—Å—Ç 1: –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    if test_export_logger():
        print('‚úÖ –¢–µ—Å—Ç 1: –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è - –ü–†–û–ô–î–ï–ù')
        tests_passed += 1
    else:
        print('‚ùå –¢–µ—Å—Ç 1: –°–∏—Å—Ç–µ–º–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è - –ù–ï –ü–†–û–ô–î–ï–ù')
    print()
    
    # –¢–µ—Å—Ç 2: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram
    if test_telegram_integration():
        print('‚úÖ –¢–µ—Å—Ç 2: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram - –ü–†–û–ô–î–ï–ù')
        tests_passed += 1
    else:
        print('‚ùå –¢–µ—Å—Ç 2: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram - –ù–ï –ü–†–û–ô–î–ï–ù')
    print()
    
    # –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    if simulate_daily_activity():
        print('‚úÖ –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - –ü–†–û–ô–î–ï–ù')
        tests_passed += 1
    else:
        print('‚ùå –¢–µ—Å—Ç 3: –°–∏–º—É–ª—è—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - –ù–ï –ü–†–û–ô–î–ï–ù')
    print()
    
    # –¢–µ—Å—Ç 4: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    final_summary = get_today_exports_summary()
    if final_summary["total"] > 0:
        print('‚úÖ –¢–µ—Å—Ç 4: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –ü–†–û–ô–î–ï–ù')
        tests_passed += 1
    else:
        print('‚ùå –¢–µ—Å—Ç 4: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –ù–ï –ü–†–û–ô–î–ï–ù')
    print()
    
    # –ò—Ç–æ–≥–∏
    print('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:')
    print(f'   –ü—Ä–æ–π–¥–µ–Ω–æ: {tests_passed}/{total_tests} —Ç–µ—Å—Ç–æ–≤')
    print(f'   –ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(tests_passed/total_tests)*100:.1f}%')
    print()
    
    if tests_passed == total_tests:
        print('üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!')
        print()
        print('ü§ñ TELEGRAM –ë–û–¢ –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï:')
        print('   ‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ‚úÖ')
        print('   ‚Ä¢ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–∫—Å–ø–æ—Ä—Ç–æ–≤ ‚úÖ')
        print('   ‚Ä¢ –ö–æ–º–∞–Ω–¥—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ ‚úÖ')
        print('   ‚Ä¢ /today - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è')
        print('   ‚Ä¢ /projects - —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤')
        print('   ‚Ä¢ /help - —Å–ø—Ä–∞–≤–∫–∞')
        print()
        print('üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —Å –∫–æ–º–∞–Ω–¥–∞–º–∏:')
        print('   python run_telegram_bot.py')
    else:
        print('‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–®–õ–ò')
        print('   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏')
    
    return tests_passed == total_tests

if __name__ == "__main__":
    success = main()
    exit(0 if success else 1)
