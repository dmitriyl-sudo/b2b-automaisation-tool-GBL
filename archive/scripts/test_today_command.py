#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∫–æ–º–∞–Ω–¥—ã /today –±–µ–∑ –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –±–æ—Ç–∞
"""

import requests
from telegram_config import TelegramConfig
from export_logger import ExportLogger

def test_today_command_logic():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ª–æ–≥–∏–∫—É –∫–æ–º–∞–Ω–¥—ã /today"""
    print('üß™ –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –ö–û–ú–ê–ù–î–´ /today')
    print('='*50)
    print()
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        logger = ExportLogger()
        stats = logger.get_today_summary()
        
        print('üìä –î–ê–ù–ù–´–ï –î–õ–Ø –ö–û–ú–ê–ù–î–´ /today:')
        print(f'   –í—Å–µ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–æ–≤: {stats["total"]}')
        print(f'   –ü—Ä–æ–µ–∫—Ç–æ–≤: {len(stats["projects"])}')
        print(f'   –¢–∏–ø—ã: {stats["by_type"]}')
        print(f'   –û–∫—Ä—É–∂–µ–Ω–∏—è: {stats["by_env"]}')
        print()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∫ –≤ –±–æ—Ç–µ
        if stats["total"] == 0:
            message = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è\\n\\n‚ùå –°–µ–≥–æ–¥–Ω—è —ç–∫—Å–ø–æ—Ä—Ç–æ–≤ –Ω–µ –±—ã–ª–æ"
        else:
            message = f"""üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å–µ–≥–æ–¥–Ω—è

üìà –í—Å–µ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–æ–≤: {stats["total"]}
üè¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤: {len(stats["projects"])}

üìã –¢–∏–ø—ã —ç–∫—Å–ø–æ—Ä—Ç–æ–≤:"""
            
            for export_type, count in stats["by_type"].items():
                message += f"\\n   ‚Ä¢ {export_type}: {count}"
            
            message += "\\n\\nüåç –û–∫—Ä—É–∂–µ–Ω–∏—è:"
            for env, count in stats["by_env"].items():
                message += f"\\n   ‚Ä¢ {env}: {count}"
            
            if stats["projects"]:
                message += "\\n\\nüè¢ –ü—Ä–æ–µ–∫—Ç—ã:"
                for project in stats["projects"][:5]:
                    count = sum(1 for exp in stats["exports"] if exp["project"] == project)
                    message += f"\\n   ‚Ä¢ {project}: {count}"
        
        print('üì± –°–û–û–ë–©–ï–ù–ò–ï –î–õ–Ø TELEGRAM:')
        print('-'*30)
        print(message.replace('\\n', '\\n'))
        print('-'*30)
        print()
        
        return True, message
        
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
        return False, str(e)

def send_test_message_to_telegram(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    if not TelegramConfig.is_configured():
        print('‚ùå Telegram –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω')
        return False
    
    bot_token = TelegramConfig.get_bot_token()
    chat_id = TelegramConfig.get_chat_id()
    
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    
    data = {
        "chat_id": chat_id,
        "text": message,
        "parse_mode": "HTML"
    }
    
    try:
        print('üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram...')
        response = requests.post(url, json=data, timeout=10)
        
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                print('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!')
                return True
            else:
                print(f'‚ùå –û—à–∏–±–∫–∞ API: {result.get("description", "Unknown error")}')
                return False
        else:
            print(f'‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}')
            return False
            
    except Exception as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}')
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É –∫–æ–º–∞–Ω–¥—ã
    success, message = test_today_command_logic()
    
    if not success:
        print('‚ùå –õ–æ–≥–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /today –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç')
        return False
    
    # 2. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if send_test_message_to_telegram(message):
        print()
        print('üéâ –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù!')
        print('='*30)
        print('‚úÖ –õ–æ–≥–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /today —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
        print('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram')
        print()
        print('üí° –ü–†–û–ë–õ–ï–ú–ê –ë–´–õ–ê –í –¢–û–ú, –ß–¢–û:')
        print('   ‚Ä¢ Telegram –±–æ—Ç —Å –∫–æ–º–∞–Ω–¥–∞–º–∏ –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω')
        print('   ‚Ä¢ –ù—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ')
        print()
        print('üîß –†–ï–®–ï–ù–ò–ï:')
        print('   1. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª')
        print('   2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞')
        print('   3. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: source myvenv/bin/activate')
        print('   4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python -c "')
        print('      import asyncio')
        print('      from telegram_bot import run_bot_with_commands')
        print('      from telegram_config import TelegramConfig')
        print('      asyncio.run(run_bot_with_commands(')
        print('          TelegramConfig.get_bot_token(),')
        print('          TelegramConfig.get_chat_id()))"')
        print()
        print('üì± –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ –∫–æ–º–∞–Ω–¥–∞ /today –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å!')
        return True
    else:
        print()
        print('‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•')
        print('='*30)
        print('‚úÖ –õ–æ–≥–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /today —Ä–∞–±–æ—Ç–∞–µ—Ç')
        print('‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ Telegram')
        print('   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏ chat_id')
        return False

if __name__ == "__main__":
    import sys
    success = main()
    sys.exit(0 if success else 1)
