#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è GooglePay –∫ ApplePay
"""

import requests
import json

def test_googlepay_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª GooglePay"""
    print('üß™ –¢–ï–°–¢ –§–£–ù–ö–¶–ò–û–ù–ê–õ–ê –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –î–û–ë–ê–í–õ–ï–ù–ò–Ø GOOGLEPAY')
    print('='*70)
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ —Å ApplePay
    test_cases = [
        {
            "project": "Rolling",
            "geo": "DE", 
            "env": "prod",
            "description": "Rolling DE - –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å ApplePay –º–µ—Ç–æ–¥—ã"
        },
        {
            "project": "SpinEmpire",
            "geo": "FI",
            "env": "prod", 
            "description": "SpinEmpire FI - —Ç–µ—Å—Ç —Å –§–∏–Ω–ª—è–Ω–¥–∏–µ–π"
        }
    ]
    
    for i, test_case in enumerate(test_cases, 1):
        print(f'{i}. üîç –¢–ï–°–¢: {test_case["description"]}')
        print('-' * 50)
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –º–µ—Ç–æ–¥—ã
            response = requests.post(
                "http://localhost:8000/get-all-methods-for-geo",
                json=test_case,
                timeout=30
            )
            
            if response.status_code == 200:
                data = response.json()
                
                # –ò—â–µ–º ApplePay –º–µ—Ç–æ–¥—ã
                applepay_methods = []
                all_methods = (data.get('deposit_methods', []) + 
                             data.get('withdraw_methods', []))
                
                for title, name in all_methods:
                    if 'applepay' in title.lower() or 'applepay' in name.lower():
                        applepay_methods.append((title, name))
                
                print(f'üìä –í—Å–µ–≥–æ –º–µ—Ç–æ–¥–æ–≤: {len(all_methods)}')
                print(f'üçé ApplePay –º–µ—Ç–æ–¥–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {len(applepay_methods)}')
                
                if applepay_methods:
                    print('üçé ApplePay –º–µ—Ç–æ–¥—ã:')
                    for title, name in applepay_methods:
                        has_colibrix = 'colibrix' in name.lower()
                        status = '‚ùå (colibrix - GooglePay –ù–ï –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω)' if has_colibrix else '‚úÖ (GooglePay –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω)'
                        print(f'   ‚Ä¢ {title} | {name} {status}')
                else:
                    print('‚ö†Ô∏è  ApplePay –º–µ—Ç–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
                
                print()
                
            else:
                print(f'‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}')
                print(response.text)
                
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞: {e}')
        
        print()
    
    print('üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –í UI:')
    print('='*50)
    print()
    print('1. üåê –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost:3000')
    print('2. üìã –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É "GEO Methods"')
    print('3. üîß –í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, Rolling)')
    print('4. üåç –í—ã–±–µ—Ä–∏—Ç–µ GEO (–Ω–∞–ø—Ä–∏–º–µ—Ä, DE)')
    print('5. üè≠ –í—ã–±–µ—Ä–∏—Ç–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ: prod')
    print('6. ‚úÖ –í–ö–õ–Æ–ß–ò–¢–ï —á–µ–∫–±–æ–∫—Å "Add hardcoded methods"')
    print('7. üöÄ –ù–∞–∂–º–∏—Ç–µ "Load GEO Methods"')
    print()
    print('üîç –ß–¢–û –û–ñ–ò–î–ê–¢–¨:')
    print('   ‚Ä¢ –†—è–¥–æ–º —Å –∫–∞–∂–¥—ã–º ApplePay –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è GooglePay')
    print('   ‚Ä¢ GooglePay –ù–ï –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –¥–ª—è –º–µ—Ç–æ–¥–æ–≤ —Å "colibrix"')
    print('   ‚Ä¢ ID (Payment Name) —É GooglePay = ApplePay ID —Å –∑–∞–º–µ–Ω–æ–π applepay‚Üígooglepay')
    print('   ‚Ä¢ Title —É GooglePay = ApplePay Title —Å –∑–∞–º–µ–Ω–æ–π Applepay‚ÜíGooglepay')
    print()
    print('üìä –ü–†–ò–ú–ï–† –û–ñ–ò–î–ê–ï–ú–û–ì–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê:')
    print('   ApplePay Visa | Applepay_Gumballpay_Cards_1DEP')
    print('   Googlepay Visa | Googlepay_Gumballpay_Cards_1DEP  ‚Üê –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω')
    print()
    print('‚ùå –ù–ï –î–û–õ–ñ–ù–û –°–û–ó–î–ê–í–ê–¢–¨–°–Ø:')
    print('   ApplePay Colibrix | Applepay_Colibrix_Cards_1DEP')
    print('   (GooglePay –ù–ï —Å–æ–∑–¥–∞–µ—Ç—Å—è –¥–ª—è colibrix)')
    print()
    print('üß™ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:')
    print('   ‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–µ–∂–∏–º "Full project mode" (–≥–∞–ª–æ—á–∫–∞)')
    print('   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —ç–∫—Å–ø–æ—Ä—Ç –≤ Google Sheets')
    print('   ‚Ä¢ GooglePay –¥–æ–ª–∂–µ–Ω –ø–æ—è–≤–∏—Ç—å—Å—è –≤ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ')
    print()
    print('‚ú® –§–£–ù–ö–¶–ò–û–ù–ê–õ –ì–û–¢–û–í –ö –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Æ!')

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    test_googlepay_functionality()
    return True

if __name__ == "__main__":
    import sys
    success = main()
    sys.exit(0 if success else 1)
